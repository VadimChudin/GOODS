version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: documents_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  django:
    build:
      context: .
      dockerfile: Django.Dockerfile
    volumes:
      - ./django_app:/app/django_app
      - ./my_project:/app/my_project
      - ./manage.py:/app/manage.py
    environment:
      - DATABASE_URL=postgresql://admin:admin@postgres:5432/documents_db
    ports:
      - "8010:8000"
    depends_on:
      postgres:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    volumes:
      - ./app:/app/app
      - ./documents:/app/documents
    command: bash -c "sleep 10 && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql://admin:admin@postgres:5432/documents_db
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    build: .
    volumes:
      - ./app:/app/app
      - ./documents:/app/documents
    command: bash -c "sleep 15 && celery -A app.celery_worker worker --loglevel=info"
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql://admin:admin@postgres:5432/documents_db
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      app:
        condition: service_started

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy


  migrations:
    build: .
    volumes:
      - .:/app
    environment:
          PYTHONPATH: /app
          DATABASE_URL: postgresql://admin:admin@postgres:5432/documents_db
    command:
      - /bin/sh
      - -c
      - |
        while ! pg_isready -h postgres -U admin -d documents_db -t 1; do sleep 2; done
        alembic revision --autogenerate -m 'initial'
        alembic upgrade head
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
